export default {    
    // 28 operations, 84 bytes
    code: [
        0, 0, 0,    // NOP
        0, 0, 0,
        0, 0, 0,
        0, 0, 0,
        0, 0, 0,
        0, 0, 0,
        0, 0, 0,
        0, 0, 0,
        0, 0, 0,
        0, 0, 0,
        80,0, 0,        // получить в А кол-во энергии
        550, 400, -11,  // если А меньше op1, то перейти на -11 команд
        60,0, 0,        // получить в А размер кода
        240,3,0,        // делить А на 3 - получим число команд
        200,0,0,        // записать в Addr1 0, в Addr2 0
        790,0,0,        // копировать участок кода в участок памяти от адреса Addr1=0 длиной в А команд в Addr2=0 (мутации)
        690,0,5,        // взять случайное число [0, 5] и записать в А
        90,0, 0,        // записать в B A - теперь в B находится случайная сторона кубика
        710,0,0,        // создать пустую живую оболочку на стороне B, маркеры сторон будут скопированы с родителя (только если ячейка свободна)
        730,0,200,      // подключиться к кубику на стороне B и передать ему часть своей энергии 0 в процентах, и в абсолютных единицах 200
        60,0, 0,        // получить в А размер кода
        200,0,0,        // записать в Addr1 0, в Addr2 0
        750,0,0,        // подключиться к кубику на стороне B и сохранить в его код участок памяти от адреса Addr1 длиной в А байт
        690,0,5,        // взять случайное число [0, 5] и записать в А
        90,0, 0,        // записать в B A - теперь в B находится случайная сторона кубика
        800,0,0,        // перемещение в ячейку по стороне B (только если она свободна)
        800,0,0,
        800,0,0,
    ],
    marker: 1,
    energy: 800,
    memory_len: 90*3,
};